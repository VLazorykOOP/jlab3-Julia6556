interface Progression {
    int getNthTerm(int n);
    // Метод для отримання n-го члена послідовності

    int getSum(int n);
    // Метод для отримання суми перших n членів послідовності
}

class Linear1 implements Progression {
    private int firstTerm;
    private int commonDifference;

    public Linear1(int firstTerm, int commonDifference) {
        this.firstTerm = firstTerm;
        this.commonDifference = commonDifference;
    }

    @Override
    public int getNthTerm(int n) {
        return firstTerm + (n - 1) * commonDifference;
        // Формула для отримання n-го члена арифметичної послідовності
    }

    @Override
    public int getSum(int n) {
        return n * (2 * firstTerm + (n - 1) * commonDifference) / 2;
        // Формула для отримання суми перших n членів арифметичної послідовності
    }
}

class Exponential1 implements Progression {
    private int firstTerm;
    private int commonRatio;

    public Exponential1(int firstTerm, int commonRatio) {
        this.firstTerm = firstTerm;
        this.commonRatio = commonRatio;
    }

    @Override
    public int getNthTerm(int n) {
        return firstTerm * (int) Math.pow(commonRatio, n - 1);
        // Формула для отримання n-го члена експоненційної послідовності
    }

    @Override
    public int getSum(int n) {
        return firstTerm * (1 - (int) Math.pow(commonRatio, n)) / (1 - commonRatio);
        // Формула для отримання суми перших n членів експоненційної послідовності

    }
}

public class ProgressionDemo {
    public static void main(String[] args) {
        Linear1 linearProgression = new Linear1(2, 3);
        // Створення об'єкта арифметичної послідовності зі значеннями початкового члена 2 та різниці 3
        Exponential1 exponentialProgression = new Exponential1(2, 3);
        // Створення об'єкта експоненційної послідовності зі значеннями початкового члена 2 та співвідношення 3

        // Використання методів об'єктів послідовностей
        int linearNthTerm = linearProgression.getNthTerm(5);
        System.out.println("Nth term of linear progression: " + linearNthTerm);
        int linearSum = linearProgression.getSum(5);
        System.out.println("Sum of перших 5 членів linear progression: " + linearSum);

        int exponentialNthTerm = exponentialProgression.getNthTerm(5);
        System.out.println("Nth term of exponential progression: " + exponentialNthTerm);
        int exponentialSum = exponentialProgression.getSum(5);
        System.out.println("Sum of перших 5 членів exponential progression: " + exponentialSum);
    }
}

// Вивід:
// Nth term of linear progression: 14
// Sum of перших 5 членів linear progression: 55
// Nth term of exponential progression: 162
// Sum of перших 5 членів exponential progression: 242
